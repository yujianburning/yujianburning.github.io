<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-08-02T01:19:46.613Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/04/10/hello-world/"/>
    <id>http://yoursite.com/2018/04/10/hello-world/</id>
    <published>2018-04-10T07:25:00.082Z</published>
    <updated>2017-08-02T01:19:46.613Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>水平垂直居中</title>
    <link href="http://yoursite.com/2017/08/02/%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    <id>http://yoursite.com/2017/08/02/水平垂直居中/</id>
    <published>2017-08-02T06:10:34.000Z</published>
    <updated>2017-08-02T06:53:29.315Z</updated>
    
    <content type="html"><![CDATA[<p>前端开发元素的垂直水平居中是不可缺少的，在开发中容易混淆，而达不到想要的效果，下面介绍几种常用的方法。</p><h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><h3 id="1、align-center；行内元素，写给父级"><a href="#1、align-center；行内元素，写给父级" class="headerlink" title="1、align:center；行内元素，写给父级"></a>1、align:center；行内元素，写给父级</h3><h3 id="2、margin-0-auto；块级元素，写给自身"><a href="#2、margin-0-auto；块级元素，写给自身" class="headerlink" title="2、margin:0 auto；块级元素，写给自身"></a>2、margin:0 auto；块级元素，写给自身</h3><h3 id="3、just-content-center；新版flex，写给父级"><a href="#3、just-content-center；新版flex，写给父级" class="headerlink" title="3、just-content:center；新版flex，写给父级"></a>3、just-content:center；新版flex，写给父级</h3><h4 id="html结构"><a href="#html结构" class="headerlink" title="html结构"></a>html结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;parent&quot;&gt;</span><br><span class="line">       &lt;div class=&quot;son&quot;&gt;&lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="css样式"><a href="#css样式" class="headerlink" title="css样式"></a>css样式</h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> .parent&#123;</span><br><span class="line">    display:-webkit-flex;      /*声明弹性盒模型,定义弹性容器*/</span><br><span class="line">    -webkit-flex-direction:row; /*row设置主轴方向为水平方向*/</span><br><span class="line">    -webkit-justify-content:center; /*定义了在当前行上,弹性项目沿主轴如何排布*/</span><br><span class="line">    display:flex; </span><br><span class="line">    flex-direction:row;</span><br><span class="line">    justify-content:center;  /*相当于老版本的box-pack*/</span><br><span class="line">&#125;</span><br><span class="line">.son&#123;</span><br><span class="line">    width:100px;</span><br><span class="line">    height:100px;</span><br><span class="line">    background:blue;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="4、绝对定位"><a href="#4、绝对定位" class="headerlink" title="4、绝对定位"></a>4、绝对定位</h3><h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><h3 id="1、height与line-height相等；只适用于单行文本的元素才适用-比如块级元素里面文本"><a href="#1、height与line-height相等；只适用于单行文本的元素才适用-比如块级元素里面文本" class="headerlink" title="1、height与line-height相等；只适用于单行文本的元素才适用,比如块级元素里面文本"></a>1、height与line-height相等；只适用于单行文本的元素才适用,比如块级元素里面文本</h3><h3 id="2、vertical-align-middle；适用于行内块"><a href="#2、vertical-align-middle；适用于行内块" class="headerlink" title="2、vertical-align:middle；适用于行内块"></a>2、vertical-align:middle；适用于行内块</h3><h4 id="html结构-1"><a href="#html结构-1" class="headerlink" title="html结构"></a>html结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;parent&quot;&gt;</span><br><span class="line">      ![](img/QrCode.jpg)</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="css样式-1"><a href="#css样式-1" class="headerlink" title="css样式"></a>css样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.parent&#123;</span><br><span class="line">    width:500px;</span><br><span class="line">    height:500px;</span><br><span class="line">    border:1px solid red;</span><br><span class="line">&#125;</span><br><span class="line">.parent::after, .son&#123;        /*父级元素和子元素都设置display:inline-block*/</span><br><span class="line">    display:inline-block;</span><br><span class="line">    vertical-align: middle;   /*设置vertical-align:middle*/</span><br><span class="line">&#125;</span><br><span class="line">.parent::after&#123;   /*父元素添加一个伪类,并且设置高度100%*/ </span><br><span class="line">    content:&quot;&quot;;</span><br><span class="line">    height:100%;</span><br><span class="line">&#125;</span><br><span class="line">img&#123;</span><br><span class="line">    border:1px solid blue;</span><br><span class="line">    border-left:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、align-items-center"><a href="#3、align-items-center" class="headerlink" title="3、align-items:center"></a>3、align-items:center</h3><h4 id="html结构-2"><a href="#html结构-2" class="headerlink" title="html结构"></a>html结构</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;parent&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;son&quot;&gt;1&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="css样式-2"><a href="#css样式-2" class="headerlink" title="css样式"></a>css样式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.parent&#123;</span><br><span class="line">    height:400px;</span><br><span class="line">    display:-webkit-flex;  </span><br><span class="line">    display:flex;</span><br><span class="line">    flex-direction: row;/*容器内项目的排列方向(默认横向排列),row表示沿水平主轴由左向右排列,column沿垂直主轴右上到下　*/</span><br><span class="line">    align-items: center;  /*居中*/</span><br><span class="line">    border:1px solid red;</span><br><span class="line">&#125;</span><br><span class="line">.son&#123;</span><br><span class="line">    width:100px;</span><br><span class="line">    height:100px;</span><br><span class="line">    background:orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4、定位"><a href="#4、定位" class="headerlink" title="4、定位"></a>4、定位</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前端开发元素的垂直水平居中是不可缺少的，在开发中容易混淆，而达不到想要的效果，下面介绍几种常用的方法。&lt;/p&gt;
&lt;h2 id=&quot;水平居中&quot;&gt;&lt;a href=&quot;#水平居中&quot; class=&quot;headerlink&quot; title=&quot;水平居中&quot;&gt;&lt;/a&gt;水平居中&lt;/h2&gt;&lt;h3 id
      
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>es6</title>
    <link href="http://yoursite.com/2017/03/10/es6/"/>
    <id>http://yoursite.com/2017/03/10/es6/</id>
    <published>2017-03-10T03:19:04.000Z</published>
    <updated>2018-04-10T08:49:24.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、let块级作用域"><a href="#1、let块级作用域" class="headerlink" title="1、let块级作用域"></a>1、let块级作用域</h2><p>用来声明变量，用法类似于<code>var</code>，但所声明的变量只在<code>let</code>命令所在的代码块内有效。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(i);</span><br><span class="line"><span class="comment">// ReferenceError: i is not defined</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>上面代码中，计数器i只在for循环体内有效，在循环体外引用就会报错。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  a[i] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">6</span>](); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">  a[i] = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">6</span>](); <span class="comment">// 6</span></span><br></pre></td></tr></table></figure><p>上面代码中，变量i是let声明的，当前的i只在本轮循环有效，所以每一次循环的i其实都是一个新的变量，所以最后输出的是6。<br>let不允许在相同作用域内，重复声明同一个变量。</p><h3 id="2、const-常量"><a href="#2、const-常量" class="headerlink" title="2、const 常量"></a>2、const 常量</h3><p>const声明一个只读的常量。一旦声明，常量的值就不能改变。<br>const的作用域与let命令相同：只在声明所在的块级作用域内有效。</p><h3 id="3、字符串的扩展方法for-···-of-循环遍历"><a href="#3、字符串的扩展方法for-···-of-循环遍历" class="headerlink" title="3、字符串的扩展方法for ··· of 循环遍历"></a>3、字符串的扩展方法for ··· of 循环遍历</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> codePoint <span class="keyword">of</span> <span class="string">'foo'</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(codePoint)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、字符串是否包含另一个字符"><a href="#4、字符串是否包含另一个字符" class="headerlink" title="4、字符串是否包含另一个字符"></a>4、字符串是否包含另一个字符</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">'Hello world!'</span>;</span><br><span class="line"></span><br><span class="line">s.startsWith(<span class="string">'world'</span>, <span class="number">6</span>) <span class="comment">// true</span></span><br><span class="line">s.endsWith(<span class="string">'Hello'</span>, <span class="number">5</span>) <span class="comment">// true</span></span><br><span class="line">s.includes(<span class="string">'Hello'</span>, <span class="number">6</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>includes()：返回布尔值，表示是否找到了参数字符串。<br>startsWith()：返回布尔值，表示参数字符串是否在源字符串的头部。<br>endsWith()：返回布尔值，表示参数字符串是否在源字符串的尾部。</p><h3 id="5、函数参数设置默认值"><a href="#5、函数参数设置默认值" class="headerlink" title="5、函数参数设置默认值"></a>5、函数参数设置默认值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Point</span>(<span class="params">x = <span class="number">0</span>, y = <span class="number">0</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.x = x;</span><br><span class="line">  <span class="keyword">this</span>.y = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Point();</span><br><span class="line">p <span class="comment">// &#123; x: 0, y: 0 &#125;</span></span><br></pre></td></tr></table></figure><p>参数变量是默认声明的，所以不能用let或const再次声明<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">x = <span class="number">5</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> x = <span class="number">1</span>; <span class="comment">// error</span></span><br><span class="line">  <span class="keyword">const</span> x = <span class="number">2</span>; <span class="comment">// error</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>使用参数默认值时，函数不能有同名参数。<br>参数默认值可以与解构赋值的默认值，结合起来使用。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">&#123;x, y = <span class="number">5</span>&#125;</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(x, y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foo(&#123;&#125;) <span class="comment">// undefined, 5</span></span><br><span class="line">foo(&#123;<span class="attr">x</span>: <span class="number">1</span>&#125;) <span class="comment">// 1, 5</span></span><br><span class="line">foo(&#123;<span class="attr">x</span>: <span class="number">1</span>, <span class="attr">y</span>: <span class="number">2</span>&#125;) <span class="comment">// 1, 2</span></span><br><span class="line">foo() <span class="comment">// TypeError: Cannot read property 'x' of undefined</span></span><br></pre></td></tr></table></figure></p><p>只有当函数foo的参数是一个对象时，变量x和y才会通过解构赋值而生成。如果函数foo调用时参数不是对象，变量x和y就不会生成，从而报错。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1、let块级作用域&quot;&gt;&lt;a href=&quot;#1、let块级作用域&quot; class=&quot;headerlink&quot; title=&quot;1、let块级作用域&quot;&gt;&lt;/a&gt;1、let块级作用域&lt;/h2&gt;&lt;p&gt;用来声明变量，用法类似于&lt;code&gt;var&lt;/code&gt;，但所声明的变量只在&lt;code&gt;let&lt;/code&gt;命令所在的代码块内有效。&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ReferenceError: i is not defined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="-Js" scheme="http://yoursite.com/categories/Js/"/>
    
    
      <category term="es6" scheme="http://yoursite.com/tags/es6/"/>
    
  </entry>
  
</feed>
